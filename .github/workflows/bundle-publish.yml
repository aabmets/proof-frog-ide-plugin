name: Bundle Package and Publish Release

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  bundle:
    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: ./scripts

    outputs:
      proof_frog_version: ${{ steps.bundle.outputs.proof_frog_version }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Setup UV package manager
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.13
          version: "latest"

      - name: Install dependencies
        run: uv pip install proof_frog pyinstaller packaging

      - name: Bundle package
        run: python create_bundle.py

      - name: Upload built packages
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.artifact_name }}
          path: ./scripts/dist/proof_frog

  publish:
    needs: bundle
    runs-on: ubuntu-latest

    environment:
      name: release

    permissions:
      contents: write

    env:
      proof_frog_version: ${{ needs.bundle.outputs.proof_frog_version }}

    steps:
      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: Check for existing release
        id: check_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if gh release view "${{ env.proof_frog_version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Create and publish release
        if: steps.check_release.outputs.exists == 'false'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ env.proof_frog_version }}" \
            dist/** \
            --title "v${{ env.proof_frog_version }}" \
            --notes "Release v${{ env.proof_frog_version }}"
