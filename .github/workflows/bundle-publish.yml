name: Bundle Package and Publish Release

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check_release:
    name: Check for existing release
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      exists: ${{ steps.check_release.outputs.exists }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Read version from pyproject.toml
        id: get_version
        run: |
          version=$(grep -E '^version\s*=\s*"' \
            proof_frog/pyproject.toml | head -n1 | 
            sed -E 's/version\s*=\s*"([^"]+)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Check if release exists
        id: check_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if gh release view "${{ steps.get_version.outputs.version }}" >/dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

  bundle:
    needs: check_release
    if: needs.check_release.outputs.exists == 'false'
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./scripts
    outputs:
      proof_frog_version: ${{ steps.bundle.outputs.proof_frog_version }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Setup UV package manager
        uses: astral-sh/setup-uv@v5
        with:
          python-version: 3.13
          version: "latest"

      - name: Install dependencies
        run: uv pip install proof_frog pyinstaller packaging

      - name: Bundle package
        run: python create_bundle.py

      - name: Upload built packages
        uses: actions/upload-artifact@v4
        with:
          name: pkg-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./scripts/artifacts

  publish:
    needs: [check_release, bundle]
    if: needs.check_release.outputs.exists == 'false'
    runs-on: ubuntu-latest
    environment:
      name: release
    permissions:
      contents: write
    env:
      proof_frog_version: ${{ needs.check_release.outputs.version }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download built packages
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Create and publish release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "${{ env.proof_frog_version }}" artifacts/** \
            --title "ProofFrog Binaries v${{ env.proof_frog_version }}"
